trigger:
  branches:
    include:
    - master

variables:
- name: azureSubscription
  value: 'YAML_Pipelines'
- name: WebAppNameQA
  value: aj-webapp-qa
- name: WebAppNameProd
  value: aj-webapp-production
- name: appType
  value: 'Web App on Linux'

stages:

- stage: _BuildStage

  jobs:

  - job: Build
    pool:
      vmImage: windows-latest
    steps:
    - task: Maven@3
      displayName: 'Generating .war file'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'package'
    - task: CopyFiles@2
      displayName: 'Copy .war file to a'
      inputs:
        Contents: '**/*.war'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish .war file'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'warfile'
        publishLocation: 'Container'

- stage: _DeployQAStage

  jobs:

  - job: DeployQA
    pool:
      vmImage: windows-latest
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'warfile'
        downloadPath: '$(Build.ArtifactStagingDirectory)'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy QA'
      inputs:
        azureSubscription: $(azureSubscription)
        WebAppName: $(WebAppNameQA)
        packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.war'
        StartupCommand: '$(Parameters.StartupCommand)'

- stage: _QATestAutomationStage

  jobs:

  - job: QATestAutomation
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: CmdLine@2
      displayName: 'TestAutomation - Clone the TestAutomation repo to s'
      inputs:
        script:
          sudo apt-get update;
          sudo apt-get install git;
          which git;
          ls;
          pwd;
          git clone https://github.com/ajderu/TestAutomation.git
          pwd;
          echo ====cd TestAutomation===
          cd TestAutomation;
          echo ====cd TestAutomation done===
          echo ===pwd===
          pwd;
          echo ===pwd completed
          echo ===ls===
          ls
          echo ===ls output completed
    - task: CopyFiles@2
      displayName: 'TestAutomation - Copy TestAutomation repo to a folder'
      inputs:
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'TestAutomation - Publish TestAutomation repo artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/TestAutomation'
        ArtifactName: 'TestAutomation'
        publishLocation: 'Container'
    - task: Maven@4
      displayName: 'Run TestAutomation'
      inputs:
        mavenPomFile: '$(Build.ArtifactStagingDirectory)/TestAutomation/pom.xml'
        goals: test

- stage: _DeployProdStage

  jobs:

  - job: DeployProd
    pool:
      vmImage: windows-latest
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download build artifact'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'warfile'
        downloadPath: '$(Build.ArtifactStagingDirectory)'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy to Prod'
      inputs:
        azureSubscription: $(azureSubscription)
        appType: $(appType)
        WebAppName: $(WebAppNameProd)
        packageForLinux: '$(Build.ArtifactStagingDirectory)/**/*.war'
        StartupCommand: '$(Parameters.StartupCommand)'

